CREATE TABLE holiday (
                id int NOT NULL,
                start DATE,
                ending DATE
                );
                SET datestyle = "ISO, DMY";

INSERT INTO holiday   (id, start, ending ) VALUES(1, timestamp '25.07.2023',  timestamp '07.08.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(2, timestamp '24.07.2023',  timestamp '31.07.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(2, timestamp '15.08.2023',  timestamp '25.08.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(3, timestamp '20.07.2023',  timestamp '27.07.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(3, timestamp '24.09.2023',  timestamp '07.10.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(3, timestamp '21.10.2023',  timestamp '28.10.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(4, timestamp '15.07.2023',  timestamp '25.07.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(5, timestamp '12.07.2023',  timestamp '24.07.2023');
INSERT INTO holiday   (id, start, ending ) VALUES(6, timestamp '24.07.2023',  timestamp '28.07.2023');


CREATE TABLE sick_leave (
                id int NOT NULL,
                start DATE,
                ending DATE
                );
                SET datestyle = "ISO, DMY";
                
INSERT INTO sick_leave   (id, start, ending ) VALUES(3, timestamp '22.07.2023',  timestamp '24.07.2023');
INSERT INTO sick_leave   (id, start, ending ) VALUES(3, timestamp '20.09.2023',  timestamp '23.09.2023');
INSERT INTO sick_leave   (id, start, ending ) VALUES(4, timestamp '25.07.2023',  timestamp '28.08.2023');
INSERT INTO sick_leave   (id, start, ending ) VALUES(5, timestamp '12.08.2023',  timestamp '12.08.2023');
INSERT INTO sick_leave   (id, start, ending ) VALUES(6, timestamp '21.06.2023',  timestamp '20.08.2023');
INSERT INTO sick_leave   (id, start, ending ) VALUES(8, timestamp '01.01.2023',  timestamp '10.01.2023');
INSERT INTO sick_leave   (id, start, ending ) VALUES(1, timestamp '01.01.2023',  timestamp '10.01.2023');
INSERT INTO sick_leave   (id, start, ending ) VALUES(1, timestamp '12.05.2023',  timestamp '17.05.2023');

-- Необходимо выделить список сотрудников, по которым есть пересечения отпуска и больничного. Пересечением считается, 
-- если хотя бы 1 день в периодах день совпадает. 

SELECT DISTINCT id
FROM
      (
        SELECT id,
               start,
               ending,
               next_start_event,
               next_ending_event,
               CASE
                   WHEN next_start_event BETWEEN start AND ending OR 
                        next_ending_event BETWEEN start AND ending THEN 'crossing_period'
                   ELSE 'not_crossing'  
               END crossing
        
        FROM

               (
               SELECT id,
                      start,
                      ending,
                    lead(start, 1) OVER (
                    PARTITION BY id 	
                    ORDER BY start    
                    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) next_start_event,
                    lead(ending, 1) OVER (
                    PARTITION BY id 	
                    ORDER BY start
                    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) next_ending_event
              
              
                                  
                                  FROM
                                  
                            (
                              SELECT id,
                                     start,
                                     ending
                              
                              FROM holiday
                              
                              UNION ALL
                              
                              SELECT id,
                                     start,
                                     ending
                              
                              
                              FROM sick_leave
                              ORDER BY id,
                                      start  ) AS holiday_and_sick_leave
                            ) AS holiday_and_sick_leave_beetwen
                  ) AS holiday_and_sick_leave_all
WHERE crossing = 'crossing_period'
ORDER BY id 
